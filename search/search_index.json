{"config":{"indexing":"full","lang":["fr"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue Vous suivez les cours en ligne de l'IMT sur MicroPython et vous cherchez de l'aide ? Vous \u00eates au bon endroit ! Vos outils L'interface Vittascience : D\u00e9buter avec l'interface de d\u00e9veloppement d\u00e9velopp\u00e9e par notre partenaire Vittascience Carte Galaxia : Tout savoir sur la carte \u00e9lectronique d\u00e9velopp\u00e9e par notre partenaire Thingz La doc Affichage Entr\u00e9es/Sorties Communication Capteurs Actionneurs","title":"Fonctions"},{"location":"#bienvenue","text":"Vous suivez les cours en ligne de l'IMT sur MicroPython et vous cherchez de l'aide ? Vous \u00eates au bon endroit !","title":"Bienvenue"},{"location":"#vos-outils","text":"L'interface Vittascience : D\u00e9buter avec l'interface de d\u00e9veloppement d\u00e9velopp\u00e9e par notre partenaire Vittascience Carte Galaxia : Tout savoir sur la carte \u00e9lectronique d\u00e9velopp\u00e9e par notre partenaire Thingz","title":"Vos outils"},{"location":"#la-doc","text":"Affichage Entr\u00e9es/Sorties Communication Capteurs Actionneurs","title":"La doc"},{"location":"interface/","text":"Interface Vittascience L'interface de programmation Vittascience permet de programmer la carte \u00e9lectronique Galaxia depuis votre navigateur web en assemblant visuellement des blocs comme un puzzle. Ces blocs vont ensuite g\u00e9n\u00e9rer automatiquement un code MicroPython compr\u00e9hensible par la carte. Info Veuillez notez qu'il est \u00e9galement possible de se passer des blocs et utiliser l'interface en mode code uniquement Gestion des projets Nouveau projet Sauvegarder le projet Ouvrir un projet existant Modes d'affichage L'interface dispose de trois modes d'affichage : blocs , hybride , ou code . Pour passer d'un mode \u00e0 un autre, vous pouvez utiliser le groupe de boutons en haut \u00e0 droite : Mode blocs Ce mode vous permet d'assembler des blocs depuis le volet gauche de l'interface vers la partie centrale o\u00f9 vous pouvez faire glisser les blocs et les assembler pour former un programme. Mode hybride Ce mode reprend le mode blocs et ajoute un nouveau volet contenant la traduction des blocs en MicroPython. Mode code Ce mode vous permet de taper directement du code MicroPython.","title":"Interface Vittascience"},{"location":"interface/#interface-vittascience","text":"L'interface de programmation Vittascience permet de programmer la carte \u00e9lectronique Galaxia depuis votre navigateur web en assemblant visuellement des blocs comme un puzzle. Ces blocs vont ensuite g\u00e9n\u00e9rer automatiquement un code MicroPython compr\u00e9hensible par la carte. Info Veuillez notez qu'il est \u00e9galement possible de se passer des blocs et utiliser l'interface en mode code uniquement","title":"Interface Vittascience"},{"location":"interface/#gestion-des-projets","text":"","title":"Gestion des projets"},{"location":"interface/#nouveau-projet","text":"","title":"Nouveau projet"},{"location":"interface/#sauvegarder-le-projet","text":"","title":"Sauvegarder le projet"},{"location":"interface/#ouvrir-un-projet-existant","text":"","title":"Ouvrir un projet existant"},{"location":"interface/#modes-daffichage","text":"L'interface dispose de trois modes d'affichage : blocs , hybride , ou code . Pour passer d'un mode \u00e0 un autre, vous pouvez utiliser le groupe de boutons en haut \u00e0 droite :","title":"Modes d'affichage"},{"location":"interface/#mode-blocs","text":"Ce mode vous permet d'assembler des blocs depuis le volet gauche de l'interface vers la partie centrale o\u00f9 vous pouvez faire glisser les blocs et les assembler pour former un programme.","title":"Mode blocs"},{"location":"interface/#mode-hybride","text":"Ce mode reprend le mode blocs et ajoute un nouveau volet contenant la traduction des blocs en MicroPython.","title":"Mode hybride"},{"location":"interface/#mode-code","text":"Ce mode vous permet de taper directement du code MicroPython.","title":"Mode code"},{"location":"affichage/led/","text":"Permet de contr\u00f4ler l'\u00e9tat de la LED connect\u00e9e sur une broche de la carte \u00e9lectronique. Branchement Bloc Code Exemple : Allumage d'une LED # On importe les modules machine et utime from machine import * import utime # D\u00e9claration d'une broche en sortie sur la broche 2 # \u00e0 l'aide du constructeur Pin() led = Pin(2, Pin.OUT) # On allume la LED led.on() # On attend 1 seconde utime.sleep(1) # On \u00e9teint la LED led.off() Documentation MicroPython Dans l'exemple ci-dessus, nous utilisons la classe Pin qui permet de manipuler les broches E/S (Entr\u00e9e/Sortie) de la carte \u00e9lectronique. Pour en savoir plus sur cette classe, nous vous invitons \u00e0 lire la documentation MicroPython .","title":"Affichage"},{"location":"affichage/led/#branchement","text":"","title":"Branchement"},{"location":"affichage/led/#bloc","text":"","title":"Bloc"},{"location":"affichage/led/#code","text":"","title":"Code"},{"location":"affichage/led/#exemple-allumage-dune-led","text":"# On importe les modules machine et utime from machine import * import utime # D\u00e9claration d'une broche en sortie sur la broche 2 # \u00e0 l'aide du constructeur Pin() led = Pin(2, Pin.OUT) # On allume la LED led.on() # On attend 1 seconde utime.sleep(1) # On \u00e9teint la LED led.off()","title":"Exemple : Allumage d'une LED"},{"location":"affichage/led/#documentation-micropython","text":"Dans l'exemple ci-dessus, nous utilisons la classe Pin qui permet de manipuler les broches E/S (Entr\u00e9e/Sortie) de la carte \u00e9lectronique. Pour en savoir plus sur cette classe, nous vous invitons \u00e0 lire la documentation MicroPython .","title":"Documentation MicroPython"},{"location":"communication/ecrire_dans_la_console/","text":"\u00c9crire dans la console Permet d'\u00e9crire des donn\u00e9es dans le port s\u00e9rie (appel\u00e9 \u00e9galement console ou encore REPL ). Le port s\u00e9rie permet d'\u00e9changer des donn\u00e9es entre la carte Galaxia et l'ordinateur gr\u00e2ce \u00e0 la liaison USB. Lorsque vous utilisez l'interface Vittascience, vous pouvez voir les donn\u00e9es re\u00e7ues de la carte gr\u00e2ce au bouton REPL situ\u00e9 en bas de l'interface. Exemple avec des blocs Exemple du code # print() fait partie du langage MicroPython # pas besoin d'importer un module # Affichage d'un message avec la fonction print() print(\"Bonjour !\") Aller plus loin Dans l'exemple ci-dessus, nous utilisons la fonction print qui fait partie du langage MicroPython (donc pas besoin d'importer un module pour l'utiliser). Cette fonction peut prendre un ou plusieurs param\u00e8tres d\u00e9taill\u00e9s dans la documentation MicroPython .","title":"Communication"},{"location":"communication/ecrire_dans_la_console/#ecrire-dans-la-console","text":"Permet d'\u00e9crire des donn\u00e9es dans le port s\u00e9rie (appel\u00e9 \u00e9galement console ou encore REPL ). Le port s\u00e9rie permet d'\u00e9changer des donn\u00e9es entre la carte Galaxia et l'ordinateur gr\u00e2ce \u00e0 la liaison USB. Lorsque vous utilisez l'interface Vittascience, vous pouvez voir les donn\u00e9es re\u00e7ues de la carte gr\u00e2ce au bouton REPL situ\u00e9 en bas de l'interface.","title":"\u00c9crire dans la console"},{"location":"communication/ecrire_dans_la_console/#exemple-avec-des-blocs","text":"","title":"Exemple avec des blocs"},{"location":"communication/ecrire_dans_la_console/#exemple-du-code","text":"# print() fait partie du langage MicroPython # pas besoin d'importer un module # Affichage d'un message avec la fonction print() print(\"Bonjour !\")","title":"Exemple du code"},{"location":"communication/ecrire_dans_la_console/#aller-plus-loin","text":"Dans l'exemple ci-dessus, nous utilisons la fonction print qui fait partie du langage MicroPython (donc pas besoin d'importer un module pour l'utiliser). Cette fonction peut prendre un ou plusieurs param\u00e8tres d\u00e9taill\u00e9s dans la documentation MicroPython .","title":"Aller plus loin"},{"location":"entrees_sorties/temps/","text":"Bienvenue Vous suivez les cours en ligne de l'IMT sur MicroPython et vous cherchez de l'aide ? Vous \u00eates au bon endroit ! Vos outils L'interface Vittascience : D\u00e9buter avec l'interface de d\u00e9veloppement d\u00e9velopp\u00e9e par notre partenaire Vittascience Carte Galaxia : Tout savoir sur la carte \u00e9lectronique d\u00e9velopp\u00e9e par notre partenaire Thingz La doc Affichage Entr\u00e9es/Sorties Communication Capteurs Actionneurs","title":"Bienvenue"},{"location":"entrees_sorties/temps/#bienvenue","text":"Vous suivez les cours en ligne de l'IMT sur MicroPython et vous cherchez de l'aide ? Vous \u00eates au bon endroit !","title":"Bienvenue"},{"location":"entrees_sorties/temps/#vos-outils","text":"L'interface Vittascience : D\u00e9buter avec l'interface de d\u00e9veloppement d\u00e9velopp\u00e9e par notre partenaire Vittascience Carte Galaxia : Tout savoir sur la carte \u00e9lectronique d\u00e9velopp\u00e9e par notre partenaire Thingz","title":"Vos outils"},{"location":"entrees_sorties/temps/#la-doc","text":"Affichage Entr\u00e9es/Sorties Communication Capteurs Actionneurs","title":"La doc"},{"location":"entrees_sorties/temps/attendre/","text":"Attendre Effectue une pause dans l'ex\u00e9cution du code. Exemple avec des blocs Exemple du code # On importe le module utime import utime # Affichage d'un message avec la fonction print() print(\"D\u00e9marrage du programme\") # On attend 1 seconde utime.sleep(1) print(\"1 seconde \u00e9coul\u00e9e\") Aller plus loin Dans l'exemple ci-dessus, nous utilisons le module utime qui permet de g\u00e9rer les \u00e9l\u00e9ments de temps. Pour en savoir plus sur cette classe, nous vous invitons \u00e0 lire la documentation MicroPython .","title":"Entr\u00e9es/Sorties"},{"location":"entrees_sorties/temps/attendre/#attendre","text":"Effectue une pause dans l'ex\u00e9cution du code.","title":"Attendre"},{"location":"entrees_sorties/temps/attendre/#exemple-avec-des-blocs","text":"","title":"Exemple avec des blocs"},{"location":"entrees_sorties/temps/attendre/#exemple-du-code","text":"# On importe le module utime import utime # Affichage d'un message avec la fonction print() print(\"D\u00e9marrage du programme\") # On attend 1 seconde utime.sleep(1) print(\"1 seconde \u00e9coul\u00e9e\")","title":"Exemple du code"},{"location":"entrees_sorties/temps/attendre/#aller-plus-loin","text":"Dans l'exemple ci-dessus, nous utilisons le module utime qui permet de g\u00e9rer les \u00e9l\u00e9ments de temps. Pour en savoir plus sur cette classe, nous vous invitons \u00e0 lire la documentation MicroPython .","title":"Aller plus loin"},{"location":"entrees_sorties/temps/demarrer_le_chronometre/","text":"Initialise un chronom\u00e8tre \u00e0 0 (en secondes). Bloc Code Exemple : Affichage diff\u00e9r\u00e9 # On importe le module utime import utime # Affichage d'un message avec la fonction print() print(\"D\u00e9marrage du programme\") # On attend 1 seconde utime.sleep(1) print(\"1 seconde \u00e9coul\u00e9e\") Documentation MicroPython Dans l'exemple ci-dessus, nous utilisons le module utime qui permet de g\u00e9rer les \u00e9l\u00e9ments de temps. Pour en savoir plus sur cette classe, nous vous invitons \u00e0 lire la documentation MicroPython .","title":"Demarrer le chronometre"},{"location":"entrees_sorties/temps/demarrer_le_chronometre/#bloc","text":"","title":"Bloc"},{"location":"entrees_sorties/temps/demarrer_le_chronometre/#code","text":"","title":"Code"},{"location":"entrees_sorties/temps/demarrer_le_chronometre/#exemple-affichage-differe","text":"# On importe le module utime import utime # Affichage d'un message avec la fonction print() print(\"D\u00e9marrage du programme\") # On attend 1 seconde utime.sleep(1) print(\"1 seconde \u00e9coul\u00e9e\")","title":"Exemple : Affichage diff\u00e9r\u00e9"},{"location":"entrees_sorties/temps/demarrer_le_chronometre/#documentation-micropython","text":"Dans l'exemple ci-dessus, nous utilisons le module utime qui permet de g\u00e9rer les \u00e9l\u00e9ments de temps. Pour en savoir plus sur cette classe, nous vous invitons \u00e0 lire la documentation MicroPython .","title":"Documentation MicroPython"}]}